name: Test

on:
  push:
    branches: [ main, develop, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
        pip install -e .[lambda]
    
    - name: Run tests
      run: |
        python -m pytest test_aligner.py -v
    
    - name: Test CLI functionality
      run: |
        python aligner.py --help
        # Test with sample data if available
        if [ -f "sample/transcription.json" ]; then
          python aligner.py sample/transcription.json --speaker-brackets
        fi
    
    - name: Test example usage
      run: |
        python example_usage.py

  lambda-compatibility:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.9 (Lambda compatible)
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
    
    - name: Test Lambda deployment compatibility
      run: |
        python -m pip install --upgrade pip
        pip install -e .[lambda]
        
        # Create and run Lambda compatibility test
        python test_lambda_compatibility.py